export default [
    [
        "downloadFIle1",
        "{\"name\":\"downloadFIle1\",\"input\":[{\"name\":\"Download File\",\"type\":\"downloadFile\"},{\"name\":\"addressAndLengthFormatIdentifier\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"},{\"min\":2,\"max\":2,\"message\":\"长度为1个字节\",\"trigger\":\"change\"}]},{\"name\":\"memoryAddress\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"}]},{\"name\":\"memorySize\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"}]}],\"changeslot\":[\"0,0\",\"0,2\",\"0,3\",\"0,4\"],\"table\":[{\"type\":\"uds\",\"func\":\"if(readData[0]!=0x74){\\n        return false;\\n    }\\n    /*calculate bs*/\\n    var len = (readData[1] & 0xf0) >> 4;\\n    if(len+2!=readData.length){\\n        return false;\\n    }\\n    var bs=0;\\n    for (var i = 0; i < len; i++) {\\n        bs += readData[2 + i] * Math.pow(256, (len - 1 - i))\\n    }\\n    if(bs<=2){\\n        /*service number and blocknum*/\\n        return false;\\n    }\\n    bs-=2;\\n\\n    this.openFile(writeData[0]['Download File'].name,'r');\\n    \\n    var payload=[];\\n    var bn=1;\\n    var size=parseInt(writeData[4].memorySize,16);\\n    var data;\\n    if(size>bs){\\n        data=this.readFile(bs);\\n        if(data.length!=bs){\\n            this.log(\\\"file no enough data\\\");\\n            return false;\\n        }\\n        size-=bs;\\n    }else{\\n        data=this.readFile(size);\\n        if(data.length!=size){\\n            this.log(\\\"file no enough data\\\");\\n            return false;\\n        }\\n        size=0;\\n    }\\n    payload.push({\\n        type:\\\"number\\\",\\n        name:'blockNum',\\n        blockNum:bn,\\n    });\\n    payload.push({\\n        type:\\\"input\\\",\\n        name:'data',\\n        data:data,\\n    });\\n    var check=(writeData,readData)=>{\\n        if(writeData[0].blockNum!=readData[1]){\\n            return false;\\n        }\\n        if(size==0){\\n            this.insertItem(0x37,[]);\\n            this.closeFile()\\n        }else{\\n            if(size>bs){\\n                data=this.readFile(bs);\\n                if(data.length!=bs){\\n                    this.log(\\\"file no enough data\\\");\\n                    return false;\\n                }\\n                size-=bs;\\n            }else{\\n                data=this.readFile(size);\\n                if(data.length!=size){\\n                    this.log(\\\"file no enough data\\\");\\n                    return false;\\n                }\\n                size=0;\\n            }\\n            bn++;\\n            if(bn==256){\\n                bn=0;\\n            }\\n            payload=[]\\n            payload.push({\\n                type:\\\"number\\\",\\n                name:'blockNum',\\n                blockNum:bn,\\n            });\\n            payload.push({\\n                type:\\\"input\\\",\\n                name:'data',\\n                data:data,\\n            });\\n            this.insertItem(0x36,payload,check);\\n        }\\n        return true;\\n    }\\n    this.insertItem(0x36,payload,check);\\n    return true;\",\"service\":{\"name\":\"RequestDownload\",\"value\":52},\"payload\":[{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":{\"name\":\"C:\\\\Users\\\\nxf45772\\\\Downloads\\\\A.json\",\"size\":325}},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"addressAndLengthFormatIdentifier\",\"addressAndLengthFormatIdentifier\":\"22\"},{\"type\":\"input\",\"name\":\"memoryAddress\",\"memoryAddress\":\"33\"},{\"type\":\"input\",\"name\":\"memorySize\",\"memorySize\":\"44\"}],\"date\":1588124794790}]}"
    ],
    [
        "uploadFile1",
        "{\"name\":\"uploadFile1\",\"input\":[{\"name\":\"Upload File\",\"type\":\"uploadFile\"},{\"name\":\"addressAndLengthFormatIdentifier\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"},{\"min\":2,\"max\":2,\"message\":\"长度为1个字节\",\"trigger\":\"change\"}]},{\"name\":\"memoryAddress\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"}]},{\"name\":\"memorySize\",\"type\":\"input\",\"rule\":[{\"required\":true,\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"}]}],\"changeslot\":[\"0,0\",\"0,2\",\"0,3\",\"0,4\"],\"table\":[{\"type\":\"uds\",\"func\":\"if(readData[0]!=0x74){\\n        return false;\\n    }\\n    /*calculate bs*/\\n    var len = (readData[1] & 0xf0) >> 4;\\n    if(len+2!=readData.length){\\n        return false;\\n    }\\n    var bs=0;\\n    for (var i = 0; i < len; i++) {\\n        bs += readData[2 + i] * Math.pow(256, (len - 1 - i))\\n    }\\n    if(bs<=2){\\n        /*service number and blocknum*/\\n        return false;\\n    }\\n \\n\\n    this.openFile(writeData[0]['Upload File'].name,'w+');\\n    \\n    var payload=[];\\n    var bn=1;\\n    var size=parseInt(writeData[4].memorySize,16);\\n\\n    payload.push({\\n        type:\\\"number\\\",\\n        name:'blockNum',\\n        blockNum:bn,\\n    });\\n    \\n    var check=(writeData,readData)=>{\\n        if(readData.length>bs){\\n            return false;\\n        }\\n        if(writeData[0].blockNum!=readData[1]){\\n            return false;\\n        }\\n        if(size>(readData.length-2)){\\n            this.writeFile(readData.slice(2));\\n            size-=(readData.length-2);\\n        }else{\\n            this.writeFile(readData.slice(2,2+size));\\n            size=0;\\n        }\\n        \\n        if(size==0){\\n            this.insertItem(0x37,[]);\\n            this.closeFile()\\n        }else{\\n            bn++;\\n            if(bn==256){\\n                bn=0;\\n            }\\n            payload=[]\\n            payload.push({\\n                type:\\\"number\\\",\\n                name:'blockNum',\\n                blockNum:bn,\\n            });\\n            this.insertItem(0x36,payload,check);\\n        }\\n        return true;\\n    }\\n    this.insertItem(0x36,payload,check);\\n    return true;\",\"service\":{\"name\":\"RequestUpload\",\"value\":53},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\",\"Upload File\":{\"name\":\"C:\\\\Users\\\\nxf45772\\\\Downloads\\\\A.json\",\"size\":0}},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"addressAndLengthFormatIdentifier\",\"addressAndLengthFormatIdentifier\":\"11\"},{\"type\":\"input\",\"name\":\"memoryAddress\",\"memoryAddress\":\"22\"},{\"type\":\"input\",\"name\":\"memorySize\",\"memorySize\":\"0100\"}],\"date\":1588129127857}]}"
    ],
    [
        "addFile(0x38)",
        "{\"name\":\"addFile\",\"input\":[{\"name\":\"Download File\",\"type\":\"downloadFile\"},{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]},{\"name\":\"fileSizeParameterLength\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"},{\"max\":2,\"message\":\"长度为1个字节\",\"trigger\":\"change\"}]},{\"name\":\"fileSizeUnCompressed\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"}]}],\"changeslot\":[\"0,1\",\"0,4\",\"0,6\",\"0,7\"],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x1)){\\n  return false;\\n}\\nvar bsLen=readData[2];\\nvar bs=0;\\nvar i;\\nfor(i=0;i<bsLen;i+=1){\\n\\tbs+=readData[3+i]*Math.pow(256,(bsLen-1-i));\\n}\\nbs-=2;\\n\\nthis.openFile(writeData[1]['Download File'].name,'r');\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[7].fileSizeUnCompressed,16);\\nvar data;\\nif(size>bs){\\n  data=this.readFile(bs);\\n  if(data.length!=bs){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size-=bs;\\n}else{\\n  data=this.readFile(size);\\n  if(data.length!=size){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size=0;\\n}\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\npayload.push({\\n  type:\\\"input\\\",\\n  name:'data',\\n  data:data,\\n});\\nvar check=(writeData,readData)=>{\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile();\\n  }else{\\n    if(size>bs){\\n      data=this.readFile(bs);\\n      if(data.length!=bs){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size-=bs;\\n    }else{\\n      data=this.readFile(size);\\n      if(data.length!=size){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size=0;\\n    }\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[];\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    payload.push({\\n      type:\\\"input\\\",\\n      name:'data',\\n      data:data,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\\n\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\"},{\"type\":\"downloadFile\",\"name\":\"Download File\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":1},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len(filePathAndName)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"1\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\",\"fileSizeParameterLength\":\"11\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\",\"fileSizeUnCompressed\":\"11\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\",\"fileSizeCompressed\":\"equal(fileSizeUnCompressed)\"}],\"date\":1590285101198}]}"
    ],
    [
        "replaceFile(0x38)",
        "{\"name\":\"replaceFile\",\"input\":[{\"name\":\"Download File\",\"type\":\"downloadFile\"},{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]},{\"name\":\"fileSizeParameterLength\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"},{\"max\":2,\"message\":\"长度为1个字节\",\"trigger\":\"change\"}]},{\"name\":\"fileSizeUnCompressed\",\"type\":\"input\",\"rule\":[{\"pattern\":\"^([0-9a-fA-F]{2})+$\",\"message\":\"必须输入HEX格式\",\"trigger\":\"change\"}]}],\"changeslot\":[\"0,1\",\"0,4\",\"0,6\",\"0,7\"],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x3)){\\n  return false;\\n}\\nvar bsLen=readData[2];\\nvar bs=0;\\nvar i;\\nfor(i=0;i<bsLen;i+=1){\\n\\tbs+=readData[3+i]*Math.pow(256,(bsLen-1-i));\\n}\\nbs-=2;\\n\\nthis.openFile(writeData[1]['Download File'].name,'r');\\nvar payload=[];\\nvar bn=1;\\nvar size=parseInt(writeData[7].fileSizeUnCompressed,16);\\nvar data;\\nif(size>bs){\\n  data=this.readFile(bs);\\n  if(data.length!=bs){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size-=bs;\\n}else{\\n  data=this.readFile(size);\\n  if(data.length!=size){\\n    this.log(\\\"file no enough data\\\");\\n    return false;\\n  }\\n  size=0;\\n}\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\npayload.push({\\n  type:\\\"input\\\",\\n  name:'data',\\n  data:data,\\n});\\nvar check=(writeData,readData)=>{\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile();\\n  }else{\\n    if(size>bs){\\n      data=this.readFile(bs);\\n      if(data.length!=bs){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size-=bs;\\n    }else{\\n      data=this.readFile(size);\\n      if(data.length!=size){\\n        this.log(\\\"file no enough data\\\");\\n        return false;\\n      }\\n      size=0;\\n    }\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[];\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    payload.push({\\n      type:\\\"input\\\",\\n      name:'data',\\n      data:data,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\"},{\"type\":\"downloadFile\",\"name\":\"Download File\",\"Download File\":{\"name\":\"C:\\\\Users\\\\nxf45772\\\\Downloads\\\\A.json\",\"size\":735}},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":3},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len(filePathAndName)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\",\"fileSizeParameterLength\":\"11\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\",\"fileSizeUnCompressed\":\"22\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\",\"fileSizeCompressed\":\"equal(fileSizeUnCompressed)\"}],\"date\":1590286948830}]}"
    ],
    [
        "readFile(0x38)",
        "{\"name\":\"readFile\",\"input\":[{\"name\":\"Upload File\",\"type\":\"uploadFile\"},{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]}],\"changeslot\":[\"0,0\",\"0,4\"],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x4)){\\n  return false;\\n}\\n/*calculate bs*/\\nvar bsLen = readData[2];\\n\\nvar bs=0;\\nvar i;\\nfor (i = 0; i < bsLen; i+=1) {\\n  bs += readData[3 + i] * Math.pow(256, (bsLen - 1 - i));\\n}\\nvar dataFormatIdentifier=readData[3+bsLen];\\nthis.log(\\\"dataFormatIdentifier:\\\"+dataFormatIdentifier);\\nvar fileLen=readData[4+bsLen]*256+readData[5+bsLen];\\nvar size=0;\\nfor (i = 0; i < fileLen; i+=1) {\\n  size += readData[6+bsLen + i] * Math.pow(256, (fileLen - 1 - i));\\n}\\nthis.log(\\\"upload file compressed size:\\\"+size);\\nsize=0;\\nfor (i = 0; i < fileLen; i+=1) {\\n  size += readData[6+bsLen+fileLen + i] * Math.pow(256, (fileLen - 1 - i));\\n}\\nthis.log(\\\"upload file uncompressed size:\\\"+size);\\n\\nthis.openFile(writeData[0]['Upload File'].name,'w+');\\n\\nvar payload=[];\\nvar bn=1;\\n\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\n\\nvar check=(writeData,readData)=>{\\n  if(readData.length>bs){\\n    return false;\\n  }\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size>(readData.length-2)){\\n    this.writeFile(readData.slice(2));\\n    size-=(readData.length-2);\\n  }else{\\n    this.writeFile(readData.slice(2,2+size));\\n    size=0;\\n  }\\n\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.closeFile()\\n  }else{\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\"},{\"type\":\"downloadFile\",\"name\":\"Download File\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":4},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len(filePathAndName)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"1\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\",\"dataFormatIdentifier\":\"00\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\"}],\"date\":1590297339477}]}"
    ],
    [
        "deleteFile(0x38)",
        "{\"name\":\"deleteFile\",\"input\":[{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]}],\"changeslot\":[\"0,4\"],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x2)){\\n  return false;\\n}\\n\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\"},{\"type\":\"downloadFile\",\"name\":\"Download File\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":2},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len(filePathAndName)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\"}],\"date\":1590298115149}]}"
    ],
    [
        "readDir(0x38)",
        "{\"name\":\"readDir\",\"input\":[{\"name\":\"filePathAndName\",\"type\":\"text\",\"rule\":[{\"required\":true},{\"min\":1}]}],\"changeslot\":[\"0,4\"],\"table\":[{\"type\":\"uds\",\"func\":\"if((readData[0]!=0x78)||(readData[1]!=0x5)){\\n  return false;\\n}\\n/*calculate bs*/\\nvar bsLen = readData[2];\\n\\nvar bs=0;\\nvar i;\\nfor (i = 0; i < bsLen; i+=1) {\\n  bs += readData[3 + i] * Math.pow(256, (bsLen - 1 - i));\\n}\\nvar dataFormatIdentifier=readData[3+bsLen];\\nthis.log(\\\"dataFormatIdentifier:\\\"+dataFormatIdentifier);\\nvar fileLen=readData[4+bsLen]*256+readData[5+bsLen];\\nvar size=0;\\nfor (i = 0; i < fileLen; i+=1) {\\n  size += readData[6+bsLen + i] * Math.pow(256, (fileLen - 1 - i));\\n}\\nthis.log(\\\"dir info size:\\\"+size);\\n\\n\\nvar dirInfo=[];\\n\\nvar payload=[];\\nvar bn=1;\\n\\npayload.push({\\n  type:\\\"number\\\",\\n  name:'blockNum',\\n  blockNum:bn,\\n});\\n\\nvar check=(writeData,readData)=>{\\n  if(readData.length>bs){\\n    return false;\\n  }\\n  if(writeData[0].blockNum!=readData[1]){\\n    return false;\\n  }\\n  if(size>(readData.length-2)){\\n    dirInfo=dirInfo.concat(readData.slice(2));\\n    size-=(readData.length-2);\\n  }else{\\n    dirInfo=dirInfo.concat(readData.slice(2,2+size));\\n    size=0;\\n  }\\n\\n  if(size==0){\\n    this.insertItem(0x37,[]);\\n    this.log(Buffer.from(dirInfo).toString('ascii'));\\n  }else{\\n    bn++;\\n    if(bn==256){\\n      bn=0;\\n    }\\n    payload=[]\\n    payload.push({\\n      type:\\\"number\\\",\\n      name:'blockNum',\\n      blockNum:bn,\\n    });\\n    this.insertItem(0x36,payload,check);\\n  }\\n  return true;\\n}\\nthis.insertItem(0x36,payload,check);\\nreturn true;\",\"service\":{\"name\":\"RequestFileTransfer\",\"value\":56},\"payload\":[{\"type\":\"uploadFile\",\"name\":\"Upload File\"},{\"type\":\"downloadFile\",\"name\":\"Download File\"},{\"type\":\"select\",\"name\":\"modeOfOperation\",\"modeOfOperation\":5},{\"type\":\"input\",\"name\":\"filePathAndNameLength\",\"filePathAndNameLength\":\"len(filePathAndName)\"},{\"type\":\"text\",\"name\":\"filePathAndName\",\"filePathAndName\":\"11\"},{\"type\":\"input\",\"name\":\"dataFormatIdentifier\"},{\"type\":\"input\",\"name\":\"fileSizeParameterLength\"},{\"type\":\"input\",\"name\":\"fileSizeUnCompressed\"},{\"type\":\"input\",\"name\":\"fileSizeCompressed\"}],\"date\":1590299588116}]}"
    ]

]
